clc, clear, close all

img = getImage('img0.jpg');
imshow(img)
greyDummy = rgb2gray(img);


[L,N] = superpixels(img,100);
BW = boundarymask(L);
% imshow(imoverlay(img,BW,'cyan'))


outputImage = zeros(size(img),'like',img);
idx = label2idx(L);
numRows = size(img,1);
numCols = size(img,2);
for labelVal = 1:N
    redIdx = idx{labelVal};
    greenIdx = idx{labelVal}+numRows*numCols;
    blueIdx = idx{labelVal}+2*numRows*numCols;
    
    r = round(mean(img(redIdx)));
    g = round(mean(img(greenIdx)));
    b = round(mean(img(blueIdx)));
    color(labelVal, :) = [r, g, b];
    outputImage(redIdx) = r;
    outputImage(greenIdx) = g;
    outputImage(blueIdx) = b;
    
    outputImage = updateImg(outputImage, color, idx, labelVal, 3);
end    
 
figure
% imshow(imoverlay(outputImage,BW,'cyan'))
imshow(outputImage)

color;
dlmwrite('data/MyMatrix.txt', color, 'delimiter','\t')

diffused = importdata('data/diffused.txt');
a = 5;
m = diffused(:,1)/a;
c = diffused(:,2:4)*a;
mc = m.*c;

md_img = ones(size(greyDummy),'like',greyDummy)*255;
cd_img = ones(size(img),'like',img)*255;
ld_img = zeros(size(img),'like',img);

spectral = importdata('data/spectral.txt')
ms = zeros(size(greyDummy),'like',greyDummy);
cs_pixel = [mean(spectral(:,2)), mean(spectral(:,3)), mean(spectral(:,4))];
cs = zeros(size(img),'like',img);


for labelVal = 1:N
    md_img = updateImg(md_img, diffused, idx, labelVal, 1);
    cd_img = updateImg(cd_img, c, idx, labelVal, 3);
    ld_img = updateImg(ld_img, mc, idx, labelVal, 3);
end


figure
imshow(md_img)

figure
imshow(cd_img)

figure
imshow(ld_img)












